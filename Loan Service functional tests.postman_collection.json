{
	"info": {
		"_postman_id": "35885317-dd75-4d3a-b941-6d23d13a2562",
		"name": "Loan Service functional tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "5119471"
	},
	"item": [
		{
			"name": "Create User 1",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test-user\",\n    \"password\": \"test-pw\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json()",
							"",
							"pm.collectionVariables.set('auth', response.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test-user\",\n    \"password\": \"test-pw\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Loan User 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"pm.collectionVariables.set('loanId', response.id);",
							"",
							"pm.test(\"Should be able to create a loan\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 20000,\n    \"term\": 2\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans"
					]
				}
			},
			"response": []
		},
		{
			"name": "Repayment failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should not be able to pay the loan without approval\", function () {",
							"    pm.response.to.have.status(403);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Ensure that your loan has been approved. Ask an admin for help.');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10000,\n    \"loanId\": {{loanId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/repayments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"repayments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Approve Loan Failure",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Non admins should not be able to approve loan\", function () {",
							"    pm.response.to.have.status(403);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Unauthorized access');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/loans/:loanId/approve",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						":loanId",
						"approve"
					],
					"variable": [
						{
							"key": "loanId",
							"value": "{{loanId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create an admin",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test-admin\",\n    \"password\": \"test-pw\",\n    \"role\": \"admin\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login as admin",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json()",
							"",
							"pm.collectionVariables.set('auth-admin', response.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test-admin\",\n    \"password\": \"test-pw\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Approve Loan",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Admin should be able to approve loan\", function () {",
							"    pm.response.to.have.status(200);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Loan approved successfully');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth-admin}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "http://localhost:3000/loans/:loanId/approve",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						":loanId",
						"approve"
					],
					"variable": [
						{
							"key": "loanId",
							"value": "{{loanId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Repayment failure due to low amount",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should not be able to pay if amount is less than repayment amount\", function () {",
							"    pm.response.to.have.status(400);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Invalid repayment amount. Please increase the amount to at least 10000');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10,\n    \"loanId\": {{loanId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/repayments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"repayments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Repayment Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should be able to repay after approval\", function () {",
							"    pm.response.to.have.status(200);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Repayment added successfully');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10000,\n    \"loanId\":{{loanId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/repayments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"repayments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Loan repaid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should be able to repay after approval\", function () {",
							"    pm.response.to.have.status(200);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Repayment added successfully');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10000,\n    \"loanId\":{{loanId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/repayments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"repayments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Repayment Failure due to loan repaid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should not be able to repay after loan has been marked as paid\", function () {",
							"    pm.response.to.have.status(403);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('This loan has already been paid off');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 10000,\n    \"loanId\":{{loanId}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/repayments",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"repayments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create User 2",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test-user2\",\n    \"password\": \"test-pw\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/users",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var response = pm.response.json()",
							"",
							"pm.collectionVariables.set('auth-2', response.token);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"username\": \"test-user2\",\n    \"password\": \"test-pw\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/login",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Submit Loan User 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const response = pm.response.json()",
							"",
							"pm.collectionVariables.set('loanId2', response.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"amount\": 24000,\n    \"term\": 5\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get loan user 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"User should be able to get their own loan\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/{{loanId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"{{loanId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get loan user 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should not be able to get other users loan\", function () {",
							"    pm.response.to.have.status(403);",
							"    var response = pm.response.json();",
							"    pm.expect(response.message).to.eql('Unauthorized access');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "{{auth-2}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/loans/{{loanId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"loans",
						"{{loanId}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "auth",
			"value": ""
		},
		{
			"key": "auth-admin",
			"value": ""
		},
		{
			"key": "loanId",
			"value": ""
		},
		{
			"key": "auth-2",
			"value": ""
		},
		{
			"key": "loanId2",
			"value": ""
		}
	]
}